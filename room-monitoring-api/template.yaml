AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  room-monitoring-api

  Sample SAM Template for room-monitoring-api
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
Parameters:
  AwsRoomMonitoringCognitoUserPoolId:
    Type: String
  AwsRoomMonitoringCognitoClientId:
    Type: String

Resources:

  CognitoAdminPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy to allow access to cognito idp
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - "cognito-idp:AdminInitiateAuth"
            Resource: !Sub "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${AwsRoomMonitoringCognitoUserPoolId}"
            Effect: Allow

  HttpApi:
  Properties:
    Auth:
    DefaultAuthorizer: RoomMonitoringAuthorizer
    Authorizers:
      RoomMonitoringAuthorizer:
        IdentitySource: $request.header.authorization
        JwtConfiguration:
          audience:
            - !Ref AwsRoomMonitoringCognitoClientId
          issuer: !Sub "https://cognito-idp.${AWS::Region}.amazonaws.com/${AwsRoomMonitoringCognitoUserPoolId}"
    CorsConfiguration:
      AllowMethods:
        - "*"
      AllowHeaders:
        - "*"
      AllowOrigins:
        - "*"
    DefinitionBody:
      info:
        version: "1.0"
        title: !Ref AWS::StackName
      paths: {}
      openapi: 3.0.1
    StageName: "v1"


  AuthFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello-world/functions/auth
      Handler: app.handler
      Runtime: nodejs16.x
      Events:
        PostAuth:
          Type: HttpApi # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            ApiId: !Ref HttpApi
            Path: /auth
            Method: POST
      Policies:
        - !Ref CognitoAdminPolicy
  AuthFunctionLogGroup:
    Type: AWS::Logs:LogGroup
    DependsOn: [ AuthFunction ]
    Properties:
      LogGroupName: !Sub /aws/lambda/${AuthFunction}
      RetentionsInDay: !FindInMap [StageMapping, "dev", CloudWatchRetention]

  RegisterDataFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello-world/functions/register-data
      Handler: app.handler
      Runtime: nodejs16.x
      Events:
        PostRegisterData:
          Type: HttpApi # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            ApiId: !Ref HttpApi
            Path: /register
            Method: POST
            Auth:
              Authorizer: RoomMonitoringAuthorizer
      Policies:
        - DynamoDBCrudPolicy:
          TableName: !Ref MonitoringRoomSingleTable
  RegisterDataFunctionLogGroup:
    Type: AWS::Logs:LogGroup
    DependsOn: [ RegisterDataFunction ]
    Properties:
      LogGroupName: !Sub /aws/lambda/${RegisterDataFunction}
      RetentionsInDay: !FindInMap [StageMapping, "dev", CloudWatchRetention]

  MonitoringRoomSingleTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: monitoring-room-single-table
      AttributeDefinitions:
      - AttributeName: PK
        AttributeType: S
      - AttibuteName: SK
        AttributeType: S
      KeySchema:
      - AttributeName: PK
        KeyType: HASH
      - AttributeName: SK
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5 

Outputs:
  RoomMonitoringApi:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/v1/"